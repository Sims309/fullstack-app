import express from 'express';
import {
  createJoueur,
  getJoueurById,
  getAllJoueurs,
  getJoueursByPoste,  // âœ… Import de la nouvelle fonction
} from '@/controllers/joueurController';

// ðŸ”’ Import du middleware d'authentification si nÃ©cessaire
// import { authenticateToken } from '@/middleware/authenticateToken';

const router = express.Router();

// âœ… GET /api/joueurs â†’ tous les joueurs
router.get('/', getAllJoueurs);

// âœ… IMPORTANT: Route spÃ©cifique AVANT la route gÃ©nÃ©rique /:id
// GET /api/joueurs/poste/:posteId â†’ joueurs par poste (1-11)
router.get('/poste/:posteId', getJoueursByPoste);

// âœ… GET /api/joueurs/:id â†’ joueur par ID (doit Ãªtre aprÃ¨s /poste/:posteId)
router.get('/:id', getJoueurById);

// âœ… POST /api/joueurs â†’ crÃ©er un joueur
// router.post('/', authenticateToken, createJoueur); // ðŸ”’ Avec auth si nÃ©cessaire
router.post('/', createJoueur);

// ðŸ†• Routes supplÃ©mentaires utiles (optionnelles)

// PUT /api/joueurs/:id â†’ mettre Ã  jour un joueur
// router.put('/:id', authenticateToken, updateJoueur);

// DELETE /api/joueurs/:id â†’ supprimer un joueur  
// router.delete('/:id', authenticateToken, deleteJoueur);

// GET /api/joueurs/search/:query â†’ rechercher des joueurs
// router.get('/search/:query', searchJoueurs);

// GET /api/joueurs/stats/top â†’ top joueurs par points FIFA
// router.get('/stats/top', getTopJoueurs);

export default router;